@page "/debt"
@using FinanceTrackerDotNET.Services
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<h3 class="text-center mb-4">Add Debt</h3>

<div class="form-container">
    <div class="form-group">
        <label for="amount" class="form-label">Debt Amount:</label>
        <input type="number" id="amount" class="form-control" @bind="D_amount" min="1" required />
    </div>

    <div class="form-group">
        <label for="remarks" class="form-label">Debt Remarks:</label>
        <textarea id="remarks" class="form-control" @bind="D_remarks" rows="3" required></textarea>
    </div>

    <div class="form-group">
        <label for="debtDate" class="form-label">Debt Date:</label>
        <input type="date" id="debtDate" class="form-control" @bind="Debt_Date" required />
    </div>

    <button type="submit" class="btn btn-danger btn-lg w-100" @onclick="HandleSubmit">Add Debt</button>

    @if (isSuccess)
    {
        <div class="alert alert-success mt-3 text-center">
            Debt successfully added!
        </div>
    }

    @if (isError)
    {
        <div class="alert alert-danger mt-3 text-center">
            Failed to add debt. Please try again.
        </div>
    }
</div>

@code {
    private int D_amount;
    private DateTime Debt_Date = DateTime.Now; // Default to today's date
    private string D_remarks;
    private bool isSuccess = false;
    private bool isError = false;

    [CascadingParameter]
    private GlobalState _globalState { get; set; }

    private async Task HandleSubmit()
    {
        try
        {
            var createdBy = _globalState.CurrentUser.Id;

            // Call DebtService to create a new debt
            DebtService.Create(D_amount, D_remarks, Debt_Date, createdBy);

            // Reset the form fields
            D_amount = 0;
            Debt_Date = DateTime.Now;
            D_remarks = string.Empty;
            isSuccess = true;
            isError = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding debt: {ex.Message}");
            isError = true;
            isSuccess = false;
        }
    }
}

<style>
    .form-container {
        background: #f9f9f9;
        padding: 3rem;
        border-radius: 16px;
        box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
        max-width: 600px;
        margin: 50px auto;
        font-family: 'Roboto', sans-serif;
    }

    h3 {
        font-size: 2rem;
        font-weight: bold;
        color: #333333;
        text-align: center;
    }

    .form-group {
        margin-bottom: 2rem;
    }

    .form-label {
        font-size: 1.1rem;
        color: #333;
        margin-bottom: 0.5rem;
    }

    .form-control {
        padding: 1.2rem;
        font-size: 1.1rem;
        border-radius: 8px;
        border: 1px solid #ccc;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: #dc3545;
        box-shadow: 0 0 5px rgba(220, 53, 69, 0.5);
    }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
        font-size: 1.2rem;
        padding: 1.2rem;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

    .btn-danger:hover {
        background-color: #c82333;
        border-color: #bd2130;
    }

    .alert {
        font-size: 1.1rem;
        padding: 1rem;
        text-align: center;
        border-radius: 8px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
</style>
